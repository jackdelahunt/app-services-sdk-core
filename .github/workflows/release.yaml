name: Java, Go and JS SDK Release

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Version being released as X.Y.Z'
        required: true
      branch:
        description: 'Branch to release from'
        required: true
        default: 'main'
      prerelease:
        description: 'Indicate wheater this is a pre-release'
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Use Node.js 16.3.0
        uses: actions/setup-node@v3
        with:
          node-version: 16.3.0
          registry-url: "https://registry.npmjs.org"

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          check-latest: true
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_SECRET_KEY_PASSWORD

      - id: install-secret-key
        name: Install gpg secret key for Java
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Compile Java & run tests
        env:
          OFFLINE_TOKEN: ${{ secrets.OFFLINE_TOKEN }}
        working-directory: app-services-sdk-java
        run: mvn clean install

      - name: Compile JavaScript
        working-directory: app-services-sdk-js
        run: |
          yarn install
          yarn build

      - name: Set git identity
        run: |
          git config user.name ci-bot
          git config user.email ci-bot@andreatp.
          
      - name: Update Java to new version
        working-directory: app-services-sdk-java
        run:  mvn versions:set -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.release-version }}

      - name: Update JavaScript package versions 
        run: VERSION=${{ github.event.inputs.release-version }} bash scripts/update-js-packages.sh

      - name: Create branch and push tag
        run: |
          git checkout -b release-${{ github.event.inputs.release-version }}
          git add .
          git commit -m "Release version update ${{ github.event.inputs.release-version }}"
          git push origin release-${{ github.event.inputs.release-version }}
          git tag v${{ github.event.inputs.release-version }}
          git push origin v${{ github.event.inputs.release-version }}

      - name: Publish Java SDK
        working-directory: app-services-sdk-java
        run : mvn --batch-mode clean deploy -Prelease -DskipTests=true -e
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Publish JS SDK
        working-directory: app-services-sdk-js
        run: |
          npm publish --workspace=packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }} #

      - name: Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        with:
          tag_name: v${{ github.event.inputs.release-version }}
          prerelease: ${{ github.event.inputs.prerelease }} 