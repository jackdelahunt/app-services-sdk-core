/*
Account Management Service API

Manage user subscriptions and clusters

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmgmtclient

import (
	"encoding/json"
	"time"
)

// CloudResourceAllOf struct for CloudResourceAllOf
type CloudResourceAllOf struct {
	Active *bool `json:"active,omitempty"`
	Category *string `json:"category,omitempty"`
	CategoryPretty *string `json:"category_pretty,omitempty"`
	CloudProvider *string `json:"cloud_provider,omitempty"`
	CpuCores *int32 `json:"cpu_cores,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	GenericName *string `json:"generic_name,omitempty"`
	Memory *int64 `json:"memory,omitempty"`
	MemoryPretty *string `json:"memory_pretty,omitempty"`
	NamePretty *string `json:"name_pretty,omitempty"`
	ResourceType *string `json:"resource_type,omitempty"`
	SizePretty *string `json:"size_pretty,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewCloudResourceAllOf instantiates a new CloudResourceAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudResourceAllOf() *CloudResourceAllOf {
	this := CloudResourceAllOf{}
	var active bool = true
	this.Active = &active
	return &this
}

// NewCloudResourceAllOfWithDefaults instantiates a new CloudResourceAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudResourceAllOfWithDefaults() *CloudResourceAllOf {
	this := CloudResourceAllOf{}
	var active bool = true
	this.Active = &active
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetActive() bool {
	if o == nil || isNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetActiveOk() (*bool, bool) {
	if o == nil || isNil(o.Active) {
    return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasActive() bool {
	if o != nil && !isNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CloudResourceAllOf) SetActive(v bool) {
	o.Active = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetCategory() string {
	if o == nil || isNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetCategoryOk() (*string, bool) {
	if o == nil || isNil(o.Category) {
    return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasCategory() bool {
	if o != nil && !isNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *CloudResourceAllOf) SetCategory(v string) {
	o.Category = &v
}

// GetCategoryPretty returns the CategoryPretty field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetCategoryPretty() string {
	if o == nil || isNil(o.CategoryPretty) {
		var ret string
		return ret
	}
	return *o.CategoryPretty
}

// GetCategoryPrettyOk returns a tuple with the CategoryPretty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetCategoryPrettyOk() (*string, bool) {
	if o == nil || isNil(o.CategoryPretty) {
    return nil, false
	}
	return o.CategoryPretty, true
}

// HasCategoryPretty returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasCategoryPretty() bool {
	if o != nil && !isNil(o.CategoryPretty) {
		return true
	}

	return false
}

// SetCategoryPretty gets a reference to the given string and assigns it to the CategoryPretty field.
func (o *CloudResourceAllOf) SetCategoryPretty(v string) {
	o.CategoryPretty = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetCloudProvider() string {
	if o == nil || isNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetCloudProviderOk() (*string, bool) {
	if o == nil || isNil(o.CloudProvider) {
    return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasCloudProvider() bool {
	if o != nil && !isNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *CloudResourceAllOf) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetCpuCores returns the CpuCores field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetCpuCores() int32 {
	if o == nil || isNil(o.CpuCores) {
		var ret int32
		return ret
	}
	return *o.CpuCores
}

// GetCpuCoresOk returns a tuple with the CpuCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetCpuCoresOk() (*int32, bool) {
	if o == nil || isNil(o.CpuCores) {
    return nil, false
	}
	return o.CpuCores, true
}

// HasCpuCores returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasCpuCores() bool {
	if o != nil && !isNil(o.CpuCores) {
		return true
	}

	return false
}

// SetCpuCores gets a reference to the given int32 and assigns it to the CpuCores field.
func (o *CloudResourceAllOf) SetCpuCores(v int32) {
	o.CpuCores = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CloudResourceAllOf) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetGenericName returns the GenericName field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetGenericName() string {
	if o == nil || isNil(o.GenericName) {
		var ret string
		return ret
	}
	return *o.GenericName
}

// GetGenericNameOk returns a tuple with the GenericName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetGenericNameOk() (*string, bool) {
	if o == nil || isNil(o.GenericName) {
    return nil, false
	}
	return o.GenericName, true
}

// HasGenericName returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasGenericName() bool {
	if o != nil && !isNil(o.GenericName) {
		return true
	}

	return false
}

// SetGenericName gets a reference to the given string and assigns it to the GenericName field.
func (o *CloudResourceAllOf) SetGenericName(v string) {
	o.GenericName = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetMemory() int64 {
	if o == nil || isNil(o.Memory) {
		var ret int64
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetMemoryOk() (*int64, bool) {
	if o == nil || isNil(o.Memory) {
    return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasMemory() bool {
	if o != nil && !isNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int64 and assigns it to the Memory field.
func (o *CloudResourceAllOf) SetMemory(v int64) {
	o.Memory = &v
}

// GetMemoryPretty returns the MemoryPretty field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetMemoryPretty() string {
	if o == nil || isNil(o.MemoryPretty) {
		var ret string
		return ret
	}
	return *o.MemoryPretty
}

// GetMemoryPrettyOk returns a tuple with the MemoryPretty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetMemoryPrettyOk() (*string, bool) {
	if o == nil || isNil(o.MemoryPretty) {
    return nil, false
	}
	return o.MemoryPretty, true
}

// HasMemoryPretty returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasMemoryPretty() bool {
	if o != nil && !isNil(o.MemoryPretty) {
		return true
	}

	return false
}

// SetMemoryPretty gets a reference to the given string and assigns it to the MemoryPretty field.
func (o *CloudResourceAllOf) SetMemoryPretty(v string) {
	o.MemoryPretty = &v
}

// GetNamePretty returns the NamePretty field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetNamePretty() string {
	if o == nil || isNil(o.NamePretty) {
		var ret string
		return ret
	}
	return *o.NamePretty
}

// GetNamePrettyOk returns a tuple with the NamePretty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetNamePrettyOk() (*string, bool) {
	if o == nil || isNil(o.NamePretty) {
    return nil, false
	}
	return o.NamePretty, true
}

// HasNamePretty returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasNamePretty() bool {
	if o != nil && !isNil(o.NamePretty) {
		return true
	}

	return false
}

// SetNamePretty gets a reference to the given string and assigns it to the NamePretty field.
func (o *CloudResourceAllOf) SetNamePretty(v string) {
	o.NamePretty = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetResourceType() string {
	if o == nil || isNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetResourceTypeOk() (*string, bool) {
	if o == nil || isNil(o.ResourceType) {
    return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasResourceType() bool {
	if o != nil && !isNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *CloudResourceAllOf) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetSizePretty returns the SizePretty field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetSizePretty() string {
	if o == nil || isNil(o.SizePretty) {
		var ret string
		return ret
	}
	return *o.SizePretty
}

// GetSizePrettyOk returns a tuple with the SizePretty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetSizePrettyOk() (*string, bool) {
	if o == nil || isNil(o.SizePretty) {
    return nil, false
	}
	return o.SizePretty, true
}

// HasSizePretty returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasSizePretty() bool {
	if o != nil && !isNil(o.SizePretty) {
		return true
	}

	return false
}

// SetSizePretty gets a reference to the given string and assigns it to the SizePretty field.
func (o *CloudResourceAllOf) SetSizePretty(v string) {
	o.SizePretty = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CloudResourceAllOf) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourceAllOf) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CloudResourceAllOf) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *CloudResourceAllOf) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o CloudResourceAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !isNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !isNil(o.CategoryPretty) {
		toSerialize["category_pretty"] = o.CategoryPretty
	}
	if !isNil(o.CloudProvider) {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if !isNil(o.CpuCores) {
		toSerialize["cpu_cores"] = o.CpuCores
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.GenericName) {
		toSerialize["generic_name"] = o.GenericName
	}
	if !isNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !isNil(o.MemoryPretty) {
		toSerialize["memory_pretty"] = o.MemoryPretty
	}
	if !isNil(o.NamePretty) {
		toSerialize["name_pretty"] = o.NamePretty
	}
	if !isNil(o.ResourceType) {
		toSerialize["resource_type"] = o.ResourceType
	}
	if !isNil(o.SizePretty) {
		toSerialize["size_pretty"] = o.SizePretty
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableCloudResourceAllOf struct {
	value *CloudResourceAllOf
	isSet bool
}

func (v NullableCloudResourceAllOf) Get() *CloudResourceAllOf {
	return v.value
}

func (v *NullableCloudResourceAllOf) Set(val *CloudResourceAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudResourceAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudResourceAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudResourceAllOf(val *CloudResourceAllOf) *NullableCloudResourceAllOf {
	return &NullableCloudResourceAllOf{value: val, isSet: true}
}

func (v NullableCloudResourceAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudResourceAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


