/*
sso.redhat.com API documentation

This is the API documentation for sso.redhat.com

API version: 5.0.19-SNAPSHOT
Contact: it-user-team-list@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceaccountsclient

import (
	"encoding/json"
)

// SSOHealthResultError struct for SSOHealthResultError
type SSOHealthResultError struct {
	StackTrace []SSOHealthResultErrorStackTraceInner `json:"stackTrace,omitempty"`
	Message *string `json:"message,omitempty"`
	Suppressed []SSOHealthResultErrorSuppressedInner `json:"suppressed,omitempty"`
	LocalizedMessage *string `json:"localizedMessage,omitempty"`
}

// NewSSOHealthResultError instantiates a new SSOHealthResultError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSSOHealthResultError() *SSOHealthResultError {
	this := SSOHealthResultError{}
	return &this
}

// NewSSOHealthResultErrorWithDefaults instantiates a new SSOHealthResultError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSOHealthResultErrorWithDefaults() *SSOHealthResultError {
	this := SSOHealthResultError{}
	return &this
}

// GetStackTrace returns the StackTrace field value if set, zero value otherwise.
func (o *SSOHealthResultError) GetStackTrace() []SSOHealthResultErrorStackTraceInner {
	if o == nil || isNil(o.StackTrace) {
		var ret []SSOHealthResultErrorStackTraceInner
		return ret
	}
	return o.StackTrace
}

// GetStackTraceOk returns a tuple with the StackTrace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSOHealthResultError) GetStackTraceOk() ([]SSOHealthResultErrorStackTraceInner, bool) {
	if o == nil || isNil(o.StackTrace) {
    return nil, false
	}
	return o.StackTrace, true
}

// HasStackTrace returns a boolean if a field has been set.
func (o *SSOHealthResultError) HasStackTrace() bool {
	if o != nil && !isNil(o.StackTrace) {
		return true
	}

	return false
}

// SetStackTrace gets a reference to the given []SSOHealthResultErrorStackTraceInner and assigns it to the StackTrace field.
func (o *SSOHealthResultError) SetStackTrace(v []SSOHealthResultErrorStackTraceInner) {
	o.StackTrace = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SSOHealthResultError) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSOHealthResultError) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
    return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SSOHealthResultError) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SSOHealthResultError) SetMessage(v string) {
	o.Message = &v
}

// GetSuppressed returns the Suppressed field value if set, zero value otherwise.
func (o *SSOHealthResultError) GetSuppressed() []SSOHealthResultErrorSuppressedInner {
	if o == nil || isNil(o.Suppressed) {
		var ret []SSOHealthResultErrorSuppressedInner
		return ret
	}
	return o.Suppressed
}

// GetSuppressedOk returns a tuple with the Suppressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSOHealthResultError) GetSuppressedOk() ([]SSOHealthResultErrorSuppressedInner, bool) {
	if o == nil || isNil(o.Suppressed) {
    return nil, false
	}
	return o.Suppressed, true
}

// HasSuppressed returns a boolean if a field has been set.
func (o *SSOHealthResultError) HasSuppressed() bool {
	if o != nil && !isNil(o.Suppressed) {
		return true
	}

	return false
}

// SetSuppressed gets a reference to the given []SSOHealthResultErrorSuppressedInner and assigns it to the Suppressed field.
func (o *SSOHealthResultError) SetSuppressed(v []SSOHealthResultErrorSuppressedInner) {
	o.Suppressed = v
}

// GetLocalizedMessage returns the LocalizedMessage field value if set, zero value otherwise.
func (o *SSOHealthResultError) GetLocalizedMessage() string {
	if o == nil || isNil(o.LocalizedMessage) {
		var ret string
		return ret
	}
	return *o.LocalizedMessage
}

// GetLocalizedMessageOk returns a tuple with the LocalizedMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSOHealthResultError) GetLocalizedMessageOk() (*string, bool) {
	if o == nil || isNil(o.LocalizedMessage) {
    return nil, false
	}
	return o.LocalizedMessage, true
}

// HasLocalizedMessage returns a boolean if a field has been set.
func (o *SSOHealthResultError) HasLocalizedMessage() bool {
	if o != nil && !isNil(o.LocalizedMessage) {
		return true
	}

	return false
}

// SetLocalizedMessage gets a reference to the given string and assigns it to the LocalizedMessage field.
func (o *SSOHealthResultError) SetLocalizedMessage(v string) {
	o.LocalizedMessage = &v
}

func (o SSOHealthResultError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StackTrace) {
		toSerialize["stackTrace"] = o.StackTrace
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.Suppressed) {
		toSerialize["suppressed"] = o.Suppressed
	}
	if !isNil(o.LocalizedMessage) {
		toSerialize["localizedMessage"] = o.LocalizedMessage
	}
	return json.Marshal(toSerialize)
}

type NullableSSOHealthResultError struct {
	value *SSOHealthResultError
	isSet bool
}

func (v NullableSSOHealthResultError) Get() *SSOHealthResultError {
	return v.value
}

func (v *NullableSSOHealthResultError) Set(val *SSOHealthResultError) {
	v.value = val
	v.isSet = true
}

func (v NullableSSOHealthResultError) IsSet() bool {
	return v.isSet
}

func (v *NullableSSOHealthResultError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSSOHealthResultError(val *SSOHealthResultError) *NullableSSOHealthResultError {
	return &NullableSSOHealthResultError{value: val, isSet: true}
}

func (v NullableSSOHealthResultError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSSOHealthResultError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


