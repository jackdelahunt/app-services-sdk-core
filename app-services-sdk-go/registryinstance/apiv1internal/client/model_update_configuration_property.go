/*
Service Registry API

Service Registry Instance API  NOTE: This API cannot be called directly from the portal.

API version: 2.2.5.Final
Contact: apicurio@lists.jboss.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registryinstanceclient

import (
	"encoding/json"
)

// UpdateConfigurationProperty 
type UpdateConfigurationProperty struct {
	Value string `json:"value"`
}

// NewUpdateConfigurationProperty instantiates a new UpdateConfigurationProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateConfigurationProperty(value string) *UpdateConfigurationProperty {
	this := UpdateConfigurationProperty{}
	this.Value = value
	return &this
}

// NewUpdateConfigurationPropertyWithDefaults instantiates a new UpdateConfigurationProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateConfigurationPropertyWithDefaults() *UpdateConfigurationProperty {
	this := UpdateConfigurationProperty{}
	return &this
}

// GetValue returns the Value field value
func (o *UpdateConfigurationProperty) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *UpdateConfigurationProperty) GetValueOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *UpdateConfigurationProperty) SetValue(v string) {
	o.Value = v
}

func (o UpdateConfigurationProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateConfigurationProperty struct {
	value *UpdateConfigurationProperty
	isSet bool
}

func (v NullableUpdateConfigurationProperty) Get() *UpdateConfigurationProperty {
	return v.value
}

func (v *NullableUpdateConfigurationProperty) Set(val *UpdateConfigurationProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateConfigurationProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateConfigurationProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateConfigurationProperty(val *UpdateConfigurationProperty) *NullableUpdateConfigurationProperty {
	return &NullableUpdateConfigurationProperty{value: val, isSet: true}
}

func (v NullableUpdateConfigurationProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateConfigurationProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


